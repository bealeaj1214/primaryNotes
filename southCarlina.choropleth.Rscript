
require(maps)
require(plyr)
require(ggplot2)

source("theme_map.R")

# Read results  transformed using protoResults.groovy
# from http://www.enr-scvotes.org/SC/36831/66752/en/reports.html
results <-read.csv("SC/data/scResults.csv",strip.white=TRUE)

# calculate vote percentages for selected candidates
results$pct.paul <-results$Paul/results$ballotsCast *100.0
results$pct.bachmann <-results$Bachmann/results$ballotsCast *100.0
results$pct.cain <-results$Cain/results$ballotsCast *100.0
results$pct.perry <-results$Perry/results$ballotsCast *100.0
results$pct.santorum <-results$Santorum/results$ballotsCast *100.0
results$pct.gingrich <-results$Gingrich/results$ballotsCast *100.0
results$pct.romney <-results$Romney/results$ballotsCast *100.0


# normalize county names for merge
results$subregion<- tolower(results$County)

sc.map <-map_data("county","south carolina")

# use plyr function to merge data
sc.df <-join(sc.map,results,by="subregion")



p<-ggplot(sc.df)+ aes(long,lat,group=group,fill=pct.santorum)  +geom_polygon()+ geom_path(color="white") + coord_equal() + scale_fill_gradient(limits=c(0,100),low="white",high="red") + theme_map()
#ggsave("santorum.png")

 election_choropleth_layer<-function(low="white",high="red",name=NULL) {
   list(geom_polygon(),
        geom_path(color="white"),
        coord_equal(),
        scale_fill_gradient(name=name,limits=c(0,100),low=low,high=high))
 }

# used info referenced in
# http://stackoverflow.com/questions/4835332/how-can-i-combine-multiple-ggplot2-elements-into-the-return-of-a-function
candidate_plot<-function(candidate,data=sc.df){
  voterPercentage<-paste("pct.",tolower(candidate),sep="")
  label<-paste("percentage",candidate,sep="\n")
  p<-ggplot(data)+
    aes_string(x="long",y="lat",group="group",fill=voterPercentage)+
      election_choropleth_layer(name=label)  +theme_map()
}

p<-candidate_plot(candidate="Gingrich")
ggsave("SC/gingrich.png")

# abuse lapply to loop through a subset of the candidates
lapply(c("Paul","Romney","Santorum"),function(x) {
  plot.name=paste("SC/",tolower(x),".png",sep="")
  p<-candidate_plot(candidate=x)
  ggsave(plot.name,plot=p)
} )
